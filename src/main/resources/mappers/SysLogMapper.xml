<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mmall.dao.SysLogMapper" >
  <resultMap id="BaseResultMap" type="com.mmall.module.SysLog" >
    <constructor >
      <idArg column="log_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="target_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="operator" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="operator_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="operator_ip" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mmall.module.SysLogWithBLOBs" >
    <constructor >
      <idArg column="log_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="target_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="operator" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="operator_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="operator_ip" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="old_value" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
      <arg column="new_value" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    log_id, type, target_id, operator, operator_time, operator_ip, status
  </sql>
  <sql id="Blob_Column_List" >
    old_value, new_value
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_log
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mmall.module.SysLogWithBLOBs" >
    insert into sys_log (log_id, type, target_id, 
      operator, operator_time, operator_ip, 
      status, old_value, new_value
      )
    values (#{logId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{targetId,jdbcType=INTEGER}, 
      #{operator,jdbcType=VARCHAR}, #{operatorTime,jdbcType=TIMESTAMP}, #{operatorIp,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{oldValue,jdbcType=LONGVARCHAR}, #{newValue,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mmall.module.SysLogWithBLOBs" >
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="targetId != null" >
        target_id,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="operatorTime != null" >
        operator_time,
      </if>
      <if test="operatorIp != null" >
        operator_ip,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="oldValue != null" >
        old_value,
      </if>
      <if test="newValue != null" >
        new_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="targetId != null" >
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null" >
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorIp != null" >
        #{operatorIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="oldValue != null" >
        #{oldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="newValue != null" >
        #{newValue,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmall.module.SysLogWithBLOBs" >
    update sys_log
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="targetId != null" >
        target_id = #{targetId,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null" >
        operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorIp != null" >
        operator_ip = #{operatorIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="oldValue != null" >
        old_value = #{oldValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="newValue != null" >
        new_value = #{newValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mmall.module.SysLogWithBLOBs" >
    update sys_log
    set type = #{type,jdbcType=INTEGER},
      target_id = #{targetId,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      operator_ip = #{operatorIp,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      old_value = #{oldValue,jdbcType=LONGVARCHAR},
      new_value = #{newValue,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmall.module.SysLog" >
    update sys_log
    set type = #{type,jdbcType=INTEGER},
      target_id = #{targetId,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      operator_ip = #{operatorIp,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>

  <select id="countBySearchDto" parameterType="map" resultType="int">
    SELECT count(1) FROM sys_log
    <include refid="queryConditions" />
  </select>

  <select id="getLogListBySearchDto" parameterType="map" resultMap="ResultMapWithBLOBs">
    SELECT <include refid="Base_Column_List" />, <include refid="Blob_Column_List" />
    FROM sys_log
    <include refid="queryConditions" />
    ORDER BY operate_time DESC
  </select>

  <sql id="queryConditions">
    <where>
      <if test="dto.type != null">
        AND type = #{dto.type}
      </if>
      <if test="dto.beforeSeg != null and dto.beforeSeg != ''">
        AND old_value like #{dto.beforeSeg}
      </if>
      <if test="dto.afterSeg != null and dto.afterSeg != ''">
        AND new_value like #{dto.afterSeg}
      </if>
      <if test="dto.operator != null and dto.operator != ''">
        AND operator like #{dto.operator}
      </if>
      <if test="dto.fromTime != null">
        AND operate_time &gt;= #{dto.fromTime}
      </if>
      <if test="dto.toTime != null">
        AND operate_time &lt;= #{dto.toTime}
      </if>
    </where>
  </sql>
</mapper>